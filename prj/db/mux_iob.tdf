--lpm_mux CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone IV E" LPM_SIZE=2 LPM_WIDTH=16 LPM_WIDTHS=1 data result sel
--VERSION_BEGIN 18.1 cbx_lpm_mux 2018:09:12:13:04:24:SJ cbx_mgl 2018:09:12:13:10:36:SJ  VERSION_END


-- Copyright (C) 2018  Intel Corporation. All rights reserved.
--  Your use of Intel Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Intel Program License 
--  Subscription Agreement, the Intel Quartus Prime License Agreement,
--  the Intel FPGA IP License Agreement, or other applicable license
--  agreement, including, without limitation, that your use is for
--  the sole purpose of programming logic devices manufactured by
--  Intel and sold by Intel or its authorized distributors.  Please
--  refer to the applicable agreement for further details.



--synthesis_resources = lut 16 
SUBDESIGN mux_iob
( 
	data[31..0]	:	input;
	result[15..0]	:	output;
	sel[0..0]	:	input;
) 
VARIABLE 
	result_node[15..0]	: WIRE;
	sel_node[0..0]	: WIRE;
	w_data1111w[1..0]	: WIRE;
	w_data1125w[1..0]	: WIRE;
	w_data1137w[1..0]	: WIRE;
	w_data1149w[1..0]	: WIRE;
	w_data1161w[1..0]	: WIRE;
	w_data1173w[1..0]	: WIRE;
	w_data1185w[1..0]	: WIRE;
	w_data1197w[1..0]	: WIRE;
	w_data1209w[1..0]	: WIRE;
	w_data1221w[1..0]	: WIRE;
	w_data1233w[1..0]	: WIRE;
	w_data1245w[1..0]	: WIRE;
	w_data1257w[1..0]	: WIRE;
	w_data1269w[1..0]	: WIRE;
	w_data1281w[1..0]	: WIRE;
	w_data1293w[1..0]	: WIRE;

BEGIN 
	result[] = result_node[];
	result_node[] = ( ((sel_node[] & w_data1293w[1..1]) # ((! sel_node[]) & w_data1293w[0..0])), ((sel_node[] & w_data1281w[1..1]) # ((! sel_node[]) & w_data1281w[0..0])), ((sel_node[] & w_data1269w[1..1]) # ((! sel_node[]) & w_data1269w[0..0])), ((sel_node[] & w_data1257w[1..1]) # ((! sel_node[]) & w_data1257w[0..0])), ((sel_node[] & w_data1245w[1..1]) # ((! sel_node[]) & w_data1245w[0..0])), ((sel_node[] & w_data1233w[1..1]) # ((! sel_node[]) & w_data1233w[0..0])), ((sel_node[] & w_data1221w[1..1]) # ((! sel_node[]) & w_data1221w[0..0])), ((sel_node[] & w_data1209w[1..1]) # ((! sel_node[]) & w_data1209w[0..0])), ((sel_node[] & w_data1197w[1..1]) # ((! sel_node[]) & w_data1197w[0..0])), ((sel_node[] & w_data1185w[1..1]) # ((! sel_node[]) & w_data1185w[0..0])), ((sel_node[] & w_data1173w[1..1]) # ((! sel_node[]) & w_data1173w[0..0])), ((sel_node[] & w_data1161w[1..1]) # ((! sel_node[]) & w_data1161w[0..0])), ((sel_node[] & w_data1149w[1..1]) # ((! sel_node[]) & w_data1149w[0..0])), ((sel_node[] & w_data1137w[1..1]) # ((! sel_node[]) & w_data1137w[0..0])), ((sel_node[] & w_data1125w[1..1]) # ((! sel_node[]) & w_data1125w[0..0])), ((sel_node[] & w_data1111w[1..1]) # ((! sel_node[]) & w_data1111w[0..0])));
	sel_node[] = ( sel[0..0]);
	w_data1111w[] = ( data[16..16], data[0..0]);
	w_data1125w[] = ( data[17..17], data[1..1]);
	w_data1137w[] = ( data[18..18], data[2..2]);
	w_data1149w[] = ( data[19..19], data[3..3]);
	w_data1161w[] = ( data[20..20], data[4..4]);
	w_data1173w[] = ( data[21..21], data[5..5]);
	w_data1185w[] = ( data[22..22], data[6..6]);
	w_data1197w[] = ( data[23..23], data[7..7]);
	w_data1209w[] = ( data[24..24], data[8..8]);
	w_data1221w[] = ( data[25..25], data[9..9]);
	w_data1233w[] = ( data[26..26], data[10..10]);
	w_data1245w[] = ( data[27..27], data[11..11]);
	w_data1257w[] = ( data[28..28], data[12..12]);
	w_data1269w[] = ( data[29..29], data[13..13]);
	w_data1281w[] = ( data[30..30], data[14..14]);
	w_data1293w[] = ( data[31..31], data[15..15]);
END;
--VALID FILE
